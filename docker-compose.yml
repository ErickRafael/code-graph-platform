services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.from-existing
    container_name: cad_app
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./import:/app/import
    environment:
      - NEO4J_URI=bolt://host.docker.internal:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - ENABLE_OCR_PIPELINE=true
      - ENABLE_VISUAL_ANALYSIS=true
      - ENABLE_ASYNC_OCR=false
      - LIBREDWG_SERVICE_URL=http://libredwg-service:8001
    depends_on:
      - libredwg-service
      - neo4j
    command: python run.py

  libredwg-service:
    build:
      context: ./libredwg-service
      dockerfile: Dockerfile.musl
    container_name: cad_libredwg_service_real
    ports:
      - "8001:8001"
    volumes:
      - /tmp/libredwg-service:/tmp/libredwg-service
      - ./uploads:/app/uploads:ro
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  neo4j:
    image: neo4j:5.18.0
    container_name: cad_neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - ./import:/var/lib/neo4j/import
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cad_frontend
    ports:
      - "8080:80"
    depends_on:
      - app

volumes:
  neo4j_data:

   